# v0.0.4

# Use a slim, modern Debian base image for performance
FROM debian:bookworm-slim

# Set the TERM environment variable to prevent tput errors
ENV TERM=xterm

# Set environment variables to non-interactive to prevent prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Install all necessary dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg sudo build-essential cmake git wget ca-certificates dialog \
    pkg-config libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev \
    libasound2-dev libudev-dev libevdev-dev libdbus-1-dev \
    libbluetooth-dev joystick python3-dev python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Create the 'pie' user and grant necessary permissions
RUN groupadd --system input && \
    groupadd --system bluetooth && \
    useradd -m -s /bin/bash pie && \
    usermod -a -G sudo,input,video,audio,dialout,plugdev,tty,bluetooth pie && \
    echo "pie ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/pie-nopasswd

# Switch to the 'pie' user for the main setup
USER pie
WORKDIR /home/pie

# Clone and run the RetroPie setup script
RUN git clone --depth=1 https://github.com/RetroPie/RetroPie-Setup.git
WORKDIR /home/pie/RetroPie-Setup
RUN sudo ./retropie_packages.sh setup core && \
    sudo ./retropie_packages.sh setup main && \
    sudo ./retropie_packages.sh emulationstation

# Switch back to root to prepare the entrypoint
USER root

# Create a backup of the default configurations generated by the setup script.
# This backup will be used by the entrypoint to populate the empty volume on first run.
RUN mv /opt/retropie/configs /opt/retropie/configs.bak

# Copy the entrypoint script into the container and make it executable.
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set the entrypoint to our new script.
ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]
