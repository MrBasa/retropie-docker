# Use a slim, modern Debian base image for performance
#FROM debian:bookworm-slim
FROM debian:bullseye

# Set the TERM environment variable to prevent tput errors
ENV TERM=xterm

# Set environment variables to non-interactive to prevent prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Set the stop signal to allow for a clean shutdown
STOPSIGNAL SIGINT

# Install all necessary dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        cmake \
        dbus-daemon \
        dialog \
        git \
        gnupg \
        joystick \
        libasound2-dev \
        libbluetooth-dev \
        libdbus-1-dev \
        libevdev-dev \
        libsdl2-dev \
        libsdl2-image-dev \
        libsdl2-mixer-dev \
        libudev-dev \
        lsb-release \
        pkg-config \
        python3-dev \
        python3-pip \
        sudo \
        tini \
        wget && \
    rm -rf /var/lib/apt/lists/*

# Create the 'pie' user and grant necessary permissions
#RUN groupadd --system input && \
#    groupadd --system bluetooth && \
#    useradd -m -s /bin/bash pie && \
#    usermod -a -G sudo,input,video,audio,dialout,plugdev,tty,bluetooth pie && \
#    echo "pie ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/pie-nopasswd

# Idempotently create hardware groups, then create the 'pie' user and add it to them.
# This version checks if the group exists before trying to create it.
RUN (getent group video || groupadd -r video) && \
    (getent group input || groupadd -r input) && \
    (getent group render || groupadd -r render) && \
    useradd --create-home --shell /bin/bash pie && \
    echo "pie ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    usermod -a -G input,video,render pie

# Switch to the 'pie' user for the main setup
USER pie
WORKDIR /home/pie

# Clone the RetroPie-Setup repository
RUN git clone --depth=1 https://github.com/RetroPie/RetroPie-Setup.git

# Change to the RetroPie-Setup directory and run the setup script
WORKDIR /home/pie/RetroPie-Setup
# Manually install the core and main dependencies non-interactively
RUN sudo ./retropie_packages.sh setup core && \
    sudo ./retropie_packages.sh setup main && \
    sudo ./retropie_packages.sh emulationstation

# --- Final image setup ---
# Switch back to root user to move configs and set up the entrypoint
USER root

# Create a backup of the default configurations generated by the setup script.
# This backup will be used by the entrypoint to populate the empty volume on first run.
RUN mv /opt/retropie/configs /opt/retropie/configs.bak

# Copy the entrypoint script into the container and make it executable.
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set the entrypoint to our custom script.
ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]
